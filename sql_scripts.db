################################

## 18/03/2021 -- Sajad Abbasi
# fix date fields

ALTER TABLE `marketplace`.`chatroom`
ADD COLUMN `archivedAt` DATETIME NULL AFTER `updatedAt` ,
CHANGE COLUMN `createdAt` `createdAt` DATETIME NULL DEFAULT NULL ,
CHANGE COLUMN `updatedAt` `updatedAt` DATETIME NULL DEFAULT NULL ,
CHANGE COLUMN `createdAt` `createdAt` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ;

################################

## 22/03/2021 -- Sajad Abbasi
# Create vwChatroom

CREATE OR REPLACE VIEW `marketplace`.`vwChatroom` AS
    SELECT
        `marketplace`.`chatroom`.`id` AS `id`,
        `marketplace`.`chatroom`.`entityIdSeller` AS `entityIdSeller`,
        `marketplace`.`chatroom`.`entityIdBuyer` AS `entityIdBuyer`,
        `marketplace`.`chatroom`.`pendingReadSeller` AS `pendingReadSeller`,
        `marketplace`.`chatroom`.`pendingReadBuyer` AS `pendingReadBuyer`,
        `marketplace`.`chatroom`.`archivedBuyerAt` AS `archivedBuyerAt`,
        `marketplace`.`chatroom`.`archivedSellerAt` AS `archivedSellerAt`,
        `marketplace`.`chatroom`.`isArchivedSeller` AS `isArchivedSeller`,
        `marketplace`.`chatroom`.`isArchivedBuyer` AS `isArchivedBuyer`,
        `marketplace`.`chatroom`.`isReadBuyer` AS `isReadBuyer`,
        `marketplace`.`chatroom`.`isReadSeller` AS `isReadSeller`,
        `marketplace`.`chatroom`.`createdAt` AS `createdAt`,
        `marketplace`.`chatroom`.`updatedAt` AS `updatedAt`,
        `marketplace`.`entity`.`name_en` AS `name_en`,
        `marketplace`.`entity`.`name_ar` AS `name_ar`,
        `marketplace`.`entity`.`name_fr` AS `name_fr`,
        `marketplace`.`entity`.`image` AS `image`
    FROM
        (`marketplace`.`chatroom`
        LEFT JOIN `marketplace`.`entity` ON (`marketplace`.`chatroom`.`entityIdSeller` = `marketplace`.`entity`.`id`))
    ORDER BY `marketplace`.`chatroom`.`id` DESC

#############################

## 22/03/2021 -- Sajad Abbasi
# alter chat columns

ALTER TABLE `marketplace`.`chatroom`
ADD COLUMN `archivedSellerAt` DATETIME NULL AFTER `archivedBuyerAt`,
ADD COLUMN `isArchivedSeller` INT(1) NULL DEFAULT 0 AFTER `archivedSellerAt`,
ADD COLUMN `isArchivedBuyer` INT(1) NULL DEFAULT 0 AFTER `isArchivedSeller`,
ADD COLUMN `isReadBuyer` INT(1) NULL DEFAULT 1 AFTER `isArchivedBuyer`,
ADD COLUMN `isReadSeller` INT(1) NULL DEFAULT 1 AFTER `isReadBuyer`,
CHANGE COLUMN `archivedAt` `archivedBuyerAt` DATETIME NULL DEFAULT NULL ;

ALTER TABLE `marketplace`.`chatroomDetail`
ADD COLUMN `isReadSeller` TINYINT(1) NULL AFTER `isReadBuyer`,
CHANGE COLUMN `read` `isReadBuyer` TINYINT(1) NULL DEFAULT '0' ;

ALTER TABLE `marketplace`.`chatroom`
CHANGE COLUMN `sellerPendingRead` `pendingReadSeller` INT NULL DEFAULT '0' ,
CHANGE COLUMN `buyerPendingRead` `pendingReadBuyer` INT NULL DEFAULT '0' ;

ALTER TABLE `marketplace`.`chatroom`
CHANGE COLUMN `sellerEntityId` `entityIdSeller` INT NOT NULL ,
CHANGE COLUMN `buyerEntityId` `entityIdBuyer` INT NOT NULL ;

#############################

## 20/03/2021 -- Sajad Abbasi
# add settings table

CREATE TABLE `marketplace`.`setting` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(100) NULL,
  `value` TEXT NULL,
  PRIMARY KEY (`id`));

#############################

# 21/03/2021 - Patrick Younes
# Adjust Settings table

ALTER TABLE `marketplace`.`setting` 
ADD COLUMN `language` VARCHAR(5) NOT NULL DEFAULT 'en' AFTER `value`;
ALTER TABLE `marketplace`.`setting` 
CHANGE COLUMN `key` `title` VARCHAR(100) NULL DEFAULT NULL ;


#############################

# 22/03/2021 - Sajad Abbasi
# Add note column from order table

CREATE OR REPLACE VIEW `marketplace`.`vwOrderEntityUser` AS
    SELECT
        `marketplace`.`order`.`id` AS `id`,
        `marketplace`.`order`.`entityBuyerId` AS `entityBuyerId`,
        `marketplace`.`order`.`branchBuyerId` AS `branchBuyerId`,
        `marketplace`.`order`.`feedbackSubmitted` AS `feedbackSubmitted`,
        `marketplace`.`order`.`note` AS `note`,
        `user_Buyer`.`fullname` AS `userBuyer`,
        `user_Buyer`.`email` AS `userBuyerEmail`,
        `entity_Buyer`.`name_en` AS `entityBuyer`,
        `entity_Buyer`.`image` AS `entityBuyerImage`,
        `branch_Buyer`.`name_en` AS `branchBuyer`,
        `branch_Buyer`.`address_en` AS `addressBuyer`,
        `marketplace`.`order`.`entitySellerId` AS `entitySellerId`,
        `marketplace`.`order`.`userSellerId` AS `userSellerId`,
        `marketplace`.`order`.`branchSellerId` AS `branchSellerId`,
        `user_Seller`.`fullname` AS `userSeller`,
        `user_Seller`.`email` AS `userSellerEmail`,
        `entity_Seller`.`name_en` AS `entitySeller`,
        `entity_Seller`.`image` AS `entitySellerImage`,
        `branch_Seller`.`name_en` AS `branchSeller`,
        `branch_Seller`.`address_en` AS `addressSeller`,
        `marketplace`.`order`.`statusId` AS `statusId`,
        `order_status`.`name_en` AS `status`,
        `marketplace`.`order`.`serial` AS `serial`,
        `marketplace`.`order`.`currencyId` AS `currencyId`,
        `marketplace`.`currency`.`symbol` AS `currency`,
        `marketplace`.`order`.`total` AS `total`,
        `marketplace`.`order`.`subtotal` AS `subtotal`,
        `marketplace`.`order`.`vat` AS `orderVat`,
        0 AS `tax`,
        `marketplace`.`order`.`paymentMethodId` AS `orderPaymentMethodId`,
        `marketplace`.`paymentMethod`.`name_en` AS `orderPaymentMethodName_en`,
        `marketplace`.`paymentMethod`.`name_ar` AS `orderPaymentMethodName_ar`,
        `marketplace`.`paymentMethod`.`name_fr` AS `orderPaymentMethodName_fr`,
        `marketplace`.`order`.`insertDateTime` AS `insertDateTime`,
        `marketplace`.`order`.`updateDateTime` AS `updateDateTime`
    FROM
        (((((((((`marketplace`.`order`
        JOIN `marketplace`.`orderStatus` `order_status` ON ((`order_status`.`id` = `marketplace`.`order`.`statusId`)))
        JOIN `marketplace`.`currency` ON ((`marketplace`.`currency`.`id` = `marketplace`.`order`.`currencyId`)))
        LEFT JOIN `marketplace`.`user` `user_Buyer` ON ((`marketplace`.`order`.`userBuyerId` = `user_Buyer`.`id`)))
        LEFT JOIN `marketplace`.`user` `user_Seller` ON ((`marketplace`.`order`.`userSellerId` = `user_Seller`.`id`)))
        LEFT JOIN `marketplace`.`entity` `entity_Buyer` ON ((`marketplace`.`order`.`entityBuyerId` = `entity_Buyer`.`id`)))
        LEFT JOIN `marketplace`.`entity` `entity_Seller` ON ((`marketplace`.`order`.`entitySellerId` = `entity_Seller`.`id`)))
        LEFT JOIN `marketplace`.`entityBranch` `branch_Buyer` ON ((`marketplace`.`order`.`branchBuyerId` = `branch_Buyer`.`id`)))
        LEFT JOIN `marketplace`.`entityBranch` `branch_Seller` ON ((`marketplace`.`order`.`branchSellerId` = `branch_Seller`.`id`)))
        LEFT JOIN `marketplace`.`paymentMethod` ON ((`marketplace`.`order`.`paymentMethodId` = `marketplace`.`paymentMethod`.`id`)));


#############################
# 22/03/2021 - Antoine Abou Cherfane

# Added 'currencyId' column inside 'vwCartDetail'
CREATE OR REPLACE VIEW `marketplace`.`vwCartDetail` AS
    SELECT 
        `cd`.`id` AS `id`,
        `cd`.`accountId` AS `accountId`,
        `cd`.`entityProductId` AS `entityProductId`,
        `cd`.`userId` AS `userId`,
        `cd`.`insertDateTime` AS `insertDateTime`,
        `cd`.`updateDateTime` AS `updateDateTime`,
        `ep`.`entityId` AS `entityId`,
        `e`.`name_ar` AS `entityName_ar`,
        `e`.`name_en` AS `entityName_en`,
        `e`.`name_fr` AS `entityName_fr`,
        `ep`.`productId` AS `productId`,
        `p`.`scientificNameId` AS `scientificNameId`,
        `s`.`name` AS `scientificName`,
        `p`.`name_ar` AS `productName_ar`,
        `p`.`name_en` AS `productName_en`,
        `p`.`name_fr` AS `productName_fr`,
        `cd`.`quantity` AS `quantity`,
        `cd`.`quantityFree` AS `quantityFree`,
        `ep`.`unitPrice` AS `unitPrice`,
        `ep`.`vat` AS `vat`,
        `ep`.`stockStatusId` AS `stockStatusId`,
        `cur`.`id` AS `currencyId`,
        `ec`.`currency` AS `currency`,
        `ss`.`name_ar` AS `stockStatusName_ar`,
        `ss`.`name_en` AS `stockStatusName_en`,
        `ss`.`name_fr` AS `stockStatusName_fr`,
        `ep`.`stock` AS `stock`,
        `ep`.`stockUpdateDateTime` AS `stockUpdateDateTime`,
        `ep`.`maximumOrderQuantity` AS `maximumOrderQuantity`,
        `p`.`image` AS `image`,
        `p`.`madeInCountryId` AS `madeInCountryId`,
        `c`.`name_ar` AS `madeInCountryName_ar`,
        `c`.`name_en` AS `madeInCountryName_en`,
        `c`.`name_fr` AS `madeInCountryName_fr`
    FROM
        ((((((((`cartDetail` `cd`
        JOIN `entityProductSell` `ep` ON ((`cd`.`entityProductId` = `ep`.`id`)))
        JOIN `product` `p` ON ((`ep`.`productId` = `p`.`id`)))
        LEFT JOIN `scientificName` `s` ON ((`p`.`scientificNameId` = `s`.`id`)))
        JOIN `entity` `e` ON ((`ep`.`entityId` = `e`.`id`)))
        JOIN `country` `c` ON ((`p`.`madeInCountryId` = `c`.`id`)))
        JOIN `country` `ec` ON ((`e`.`countryId` = `ec`.`id`)))
        JOIN `stockStatus` `ss` ON ((`ep`.`stockStatusId` = `ss`.`id`)))
        LEFT JOIN `currency` `cur` ON ((`cur`.`symbol` = `ec`.`currency`)));

# Created 'vwEntityPaymentMethod' view 
CREATE OR REPLACE VIEW `marketplace`.`vwEntityPaymentMethod` AS
    SELECT 
        `epm`.`id` AS `id`,
        `epm`.`entityId` AS `entityId`,
        `epm`.`paymentMethodId` AS `paymentMethodId`,
        `pm`.`name_en` AS `paymentMethodName_en`,
        `pm`.`name_ar` AS `paymentMethodName_ar`,
        `pm`.`name_fr` AS `paymentMethodName_fr`
    FROM
        (`entityPaymentMethod` `epm`
        JOIN `paymentMethod` `pm` ON ((`pm`.`id` = `epm`.`paymentMethodId`)))
    GROUP BY `epm`.`id`;

#############################
# 22/03/2021 - Sajad Abbasi
# Adjust Settings table

ALTER TABLE `marketplace`.`setting`
DROP COLUMN `language`,
ADD COLUMN `value_ar` TEXT NULL AFTER `value_en`,
ADD COLUMN `value_fr` TEXT NULL AFTER `value_ar`,
CHANGE COLUMN `value` `value_en` TEXT NULL DEFAULT NULL ;

#############################

# 28/03/2021 - Patrick Younes
# Adjust apiRequestLog table

ALTER TABLE `marketplace`.`apiRequestLog` 
ADD COLUMN `response` TEXT NULL AFTER `data`;
ALTER TABLE `marketplace`.`apiRequestLog` 
ADD COLUMN `updatedAt` DATETIME NULL AFTER `createdAt`;
TRUNCATE `marketplace`.`apiRequestLog`;

#############################

# 28/03/2021 - Sajad Abbasi
# Add chatroomId in order table

ALTER TABLE `marketplace`.`order`
ADD COLUMN `chatroomId` INT NULL AFTER `serial`,
CHANGE COLUMN `currencyId` `currencyId` INT NOT NULL DEFAULT '1' AFTER `statusId`;

#############################

# 28/03/2021 - Sajad Abbasi
# Refactor chatroom and chatroomDetail

ALTER TABLE `marketplace`.`chatroom`
CHANGE COLUMN `entityIdSeller` `entitySellerId` INT NOT NULL ,
CHANGE COLUMN `entityIdBuyer` `entityBuyerId` INT NOT NULL ;

ALTER TABLE `marketplace`.`chatroomDetail`
CHANGE COLUMN `senderUserId` `userSenderId` INT NOT NULL ,
CHANGE COLUMN `senderEntityId` `entitySenderId` INT NOT NULL ,
CHANGE COLUMN `receiverEntityId` `entityReceiverId` INT NOT NULL ;

#############################

# 28/03/2021 - Sajad Abbasi
# add chatroomId in vwOrderEntityUser

CREATE OR REPLACE VIEW `marketplace`.`vwOrderEntityUser` AS
    SELECT
        `order`.`id` AS `id`,
        `order`.`entityBuyerId` AS `entityBuyerId`,
        `order`.`branchBuyerId` AS `branchBuyerId`,
        `order`.`feedbackSubmitted` AS `feedbackSubmitted`,
        `order`.`note` AS `note`,
        `order`.`chatroomId` AS `chatroomId`,
        `user_Buyer`.`fullname` AS `userBuyer`,
        `user_Buyer`.`email` AS `userBuyerEmail`,
        `entity_Buyer`.`name_en` AS `entityBuyer`,
        `entity_Buyer`.`image` AS `entityBuyerImage`,
        `branch_Buyer`.`name_en` AS `branchBuyer`,
        `branch_Buyer`.`address_en` AS `addressBuyer`,
        `order`.`entitySellerId` AS `entitySellerId`,
        `order`.`userSellerId` AS `userSellerId`,
        `order`.`branchSellerId` AS `branchSellerId`,
        `user_Seller`.`fullname` AS `userSeller`,
        `user_Seller`.`email` AS `userSellerEmail`,
        `entity_Seller`.`name_en` AS `entitySeller`,
        `entity_Seller`.`image` AS `entitySellerImage`,
        `branch_Seller`.`name_en` AS `branchSeller`,
        `branch_Seller`.`address_en` AS `addressSeller`,
        `order`.`statusId` AS `statusId`,
        `order_status`.`name_en` AS `status`,
        `order`.`serial` AS `serial`,
        `order`.`currencyId` AS `currencyId`,
        `currency`.`symbol` AS `currency`,
        `order`.`total` AS `total`,
        `order`.`subtotal` AS `subtotal`,
        `order`.`vat` AS `orderVat`,
        0 AS `tax`,
        `order`.`paymentMethodId` AS `orderPaymentMethodId`,
        `paymentMethod`.`name_en` AS `orderPaymentMethodName_en`,
        `paymentMethod`.`name_ar` AS `orderPaymentMethodName_ar`,
        `paymentMethod`.`name_fr` AS `orderPaymentMethodName_fr`,
        `order`.`insertDateTime` AS `insertDateTime`,
        `order`.`updateDateTime` AS `updateDateTime`
    FROM
        (((((((((`order`
        JOIN `orderStatus` `order_status` ON ((`order_status`.`id` = `order`.`statusId`)))
        JOIN `currency` ON ((`currency`.`id` = `order`.`currencyId`)))
        LEFT JOIN `user` `user_Buyer` ON ((`order`.`userBuyerId` = `user_Buyer`.`id`)))
        LEFT JOIN `user` `user_Seller` ON ((`order`.`userSellerId` = `user_Seller`.`id`)))
        LEFT JOIN `entity` `entity_Buyer` ON ((`order`.`entityBuyerId` = `entity_Buyer`.`id`)))
        LEFT JOIN `entity` `entity_Seller` ON ((`order`.`entitySellerId` = `entity_Seller`.`id`)))
        LEFT JOIN `entityBranch` `branch_Buyer` ON ((`order`.`branchBuyerId` = `branch_Buyer`.`id`)))
        LEFT JOIN `entityBranch` `branch_Seller` ON ((`order`.`branchSellerId` = `branch_Seller`.`id`)))
        LEFT JOIN `paymentMethod` ON ((`order`.`paymentMethodId` = `paymentMethod`.`id`)))